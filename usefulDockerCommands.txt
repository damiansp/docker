# Run a container; will try to pull if does not exist locally
docker container run -d --name quotes alpine \
  bin/sh -c "while :; do echo "ha"; sleep 5; done"


# View containers
docker container ls -l [-a]


docker container stop <container_name or ID>

docker container rm <container_name or ID>

docker container inspect <container_name>


# Inspect running containers
docker container exec <container_name> ps # list running processes in container

# inspect container interactively
docker container exec -i -t <container_name> /bin/sh

# initialize an environmental var to use in inspection
docer container exec -it -e MY_VAR="my value" <container_name> /bin/sh
(In TTY:
 echo $MY_VAR # MY_VAR is usable
)


docker container attach <container_name> # display output in terminal


# Get logs
docker container logs <container_name>
docker container logs --tail 5 <container_name> # last 5 only
docker container logs --tail 5 --follow <container_name> # last 5 then realtime


# To configure logging
emacs /etc/docker/daemon.json # >
{
  "Log-driver": "json-log",
  "log-opts": {
    "max-size": "10m",
    "max-file": 3
  }
}

# put new config into effect:
sudo kill -SIGHUP $(pidof dockerd) # reloads config daemon (does not restart)


# Image creation
# run the alpine image
docker container run -it --name sample alpine /bin/sh
# (Inside container:)
/ # apk update && apk add iputils # use alpine package mgr to install iputils

docker container diff sample # list differences between base and present image
# Outputs: A: added; C: changed; D: deleted

docker container commit sample my-alpine # commit
docker image history my-alpine # history of commits

